- script: |
    docker network create sqlnet
  displayName: Create shared Docker network

- script: |
    docker run -e "ACCEPT_EULA=Y" \
               -e "SA_PASSWORD=${DB_PASS}" \
               --network sqlnet \
               --name sqltest \
               -p 1433:1433 \
               -d mcr.microsoft.com/mssql/server:2019-latest

    echo "Waiting for SQL Server to accept TCP connections..."
    for i in {1..30}; do
      nc -z localhost 1433 && echo "SQL Server ready" && break
      echo "Still waiting... ($i)"
      sleep 2
    done
  displayName: Start SQL Server
  env:
    DB_PASS: $(DB_PASS)

- script: |
    docker run --rm \
      --network sqlnet \
      -v $(Pipeline.Workspace)/init.sql:/init.sql \
      mcr.microsoft.com/mssql-tools \
      /bin/bash -c "/opt/mssql-tools/bin/sqlcmd -S sqltest -U sa -P ${DB_PASS} -i /init.sql"
  displayName: Run .sql init script via sqlcmd
  env:
    DB_PASS: $(DB_PASS)

